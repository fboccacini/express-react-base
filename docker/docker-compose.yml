version: "3.4"

x-common-variables-sql: &common-variables-sql
  MYSQL_USER: dev_user
  MYSQL_PASSWORD: dev_password
  MYSQL_DATABASE: datatransit
  REACT_APP_SERVER_PORT: 8000

networks:
  react_express:
    driver: bridge

services:
  # mongo-db:
  #   image: mongo
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./db/mongo:/data
  mysql-db:
    image: mysql:5.7
    container_name: datatransit-db-mysql
    expose:
     - 3306
    environment:
      <<: *common-variables-sql
      MYSQL_HOST: localhost
      MYSQL_ROOT_PASSWORD: root
    restart: unless-stopped
    volumes:
      - ./db/mysql/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
  phpmyadmin:
    depends_on:
      - mysql-db
    image: phpmyadmin/phpmyadmin
    container_name: datatransit-db-phpadmin
    environment:
      PMA_HOST: mysql-db
    links:
      - mysql-db:mysql-db
    ports:
      - 8080:80
    restart: unless-stopped
  backend-node:
    build: ../backend
    container_name: datatransit-backend-node
    tty: true
    depends_on:
      - mysql-db
      # - mongo-db
    environment:
      <<: *common-variables-sql
      MYSQL_HOST: mysql-db
    ports:
      - 8000:8000
      - 5000:5000
    volumes:
      - ../backend:/app
    links:
      - mysql-db
    command: npm start
  frontend-react:
    build: ../frontend
    tty: true
    container_name: datatransit-frontend-react
    environment:
      NODE_PATH: src
      BACKEND_HOST: datatransit-backend-node
      BACKEND_PORT: 5000
    ports:
      - 3000:3000
    volumes:
      - ../frontend/src:/app/src
    links:
      - backend-node
    command: npm start
    networks:
      - react_express
